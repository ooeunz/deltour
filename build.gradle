plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.chatbot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // protobuf
    compile 'com.google.protobuf:protobuf-java:3.11.0'

    // websocket
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.webjars:stomp-websocket:2.3.3")

    // dialogflow
    compile('com.google.cloud:google-cloud-dialogflow:0.93.0-alpha')

    // security
//    compile('org.springframework.security:spring-security-oauth2-client')
//    compile('org.springframework.security:spring-security-oauth2-jose')
//    compile('org.springframework.boot:spring-boot-starter-security')

    // nosql
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // sql
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    repositories {
        mavenCentral()
        //If you are using a SNAPSHOT version
        maven { url 'https://repo.spring.io/snapshot' }
        //If you are using a milestone or release candidate version
        //현재는 SNAPSHOT 버전이기 때문에 필요 없습니다.
        //maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.BUILD-SNAPSHOT'
    }

}

test {
    useJUnitPlatform()
}
